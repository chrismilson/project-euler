""" Chris Milson April 2020
Problem 45

Triangle, pentagonal, and hexagonal numbers are generated by the following
formulae:

- Triangle      T(n)=n(n+1)/2     1, 3, 6, 10, 15, ... 
- Pentagonal    P(n)=n(3n−1)/2    1, 5, 12, 22, 35, ...
- Hexagonal     H(n)=n(2n−1)      1, 6, 15, 28, 45, ...

It can beverified that T(285) = P(165) = H(143) = 40755.

Find the next triangle number that is also pentagonal and hexagonal.

## Solution

In a similar manner to questions 44 and 42, we can quickly check if a number is
triangular, pentagonal or hexagonal.

By iterating through hexagonal numbers (we could use pentagonal or triangular
numbers, but the hexagonals grow the fastest) and checking that they are
pentagonal and triangular as well, we can find the numbers with this property.

Answer : 1533776805
"""
import math

class Triangular:
  def __getitem__(self, n):
    return n * (n + 1) // 2

  def __contains__(self, n):
    return math.sqrt(1 + 8 * n) % 2 == 1

class Pentagonal:
  def __getitem__(self, n):
    return n * (3 * n - 1) // 2

  def __contains__(self, n):
    return math.sqrt(1 + 24 * n) % 6 == 5

class Hexagonal:
  def __getitem__(self, n):
    return n * (2 * n - 1)
  
  def __contains__(self, n):
    return math.sqrt(1 + 8 * n) % 4 == 3

tri = Triangular()
penta = Pentagonal()
hexa = Hexagonal()

h = 1
found = 0
print('Numbers that are triangular, penatagonal, and hexagonal are:')
while found < 4:
  target = hexa[h]
  if target in penta and target in tri:
    print(target)
    found += 1
  h += 1